---
name: tests

on:
  push:
    paths-ignore:
      - "**.md"
      - "LICENSE"
      - "docs/**"
      - ".gitignore"
      - ".pre-commit-config.yaml"

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-18.04, ubuntu-16.04, windows-latest, macos-latest]
        python-version:
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get pip cache dir
        id: pip-cache
        run: python -c "from pip._internal.locations import USER_CACHE_DIR; print(f'::set-output name=dir::{USER_CACHE_DIR}')"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: pip-${{ matrix.os }}-${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install -U setuptools pip wheel --disable-pip-version-check
          pip install numpy cython pytest-cov --disable-pip-version-check

      - name: Install x86cpu
        run: pip install x86cpu
        if: ${{ !startsWith(matrix.python-version, '3.9') && !startsWith(matrix.python-version, '3.1') }}

      - name: Test
        run: pytest

      - name: Collect coverage report
        uses: codecov/codecov-action@v1

  static-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: pip-lint

      - name: Install dependencies
        run: |
          pip install wheel --disable-pip-version-check
          pip install -U flake8 flake8-polyfill bandit black radon yamllint --disable-pip-version-check

      - name: Python code quality lint
        run: flake8

      - name: Python security lint
        run: bandit -r -s B603,B404 compilertools
        if: ${{ always() }}

      - name: Python code style lint
        run: black --check --diff .
        if: ${{ always() }}

      - name: Python code complexity
        run: radon cc -n D compilertools
        if: ${{ always() }}

      - name: Python code maintenability
        run: radon mi -n B compilertools
        if: ${{ always() }}

      - name: Yaml code style lint
        run: yamllint .
        if: ${{ always() }}
