---
name: Documentation

on:
  push:
    tags:
      - v*

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  CACHE_DIR: /tmp/.workflow_cache
  POETRY_CACHE_DIR: /tmp/.workflow_cache/.pip_packages
  POETRY_VIRTUALENVS_PATH: /tmp/.workflow_cache/.venvs
  POETRY_HOME: /tmp/.workflow_cache/.poetry
  PIP_CACHE_DIR: /tmp/.workflow_cache/.pip_packages

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Cache dependencies
        uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.CACHE_DIR }}
          key: tests-ubuntu-latest-3.x--${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python -
          $POETRY_HOME/bin/poetry install -n
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Build documentation
        run: |
          $POETRY_HOME/bin/poetry version $(echo -e "${{ github.ref_name }}" | tr -d 'v')
          $POETRY_HOME/bin/poetry run sphinx-build -b html doc doc/_build

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: doc/_build

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
